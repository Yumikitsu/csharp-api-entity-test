// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using workshop.wwwapi.Data;

#nullable disable

namespace workshop.wwwapi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240909140555_secondMigration")]
    partial class secondMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("workshop.wwwapi.Models.Appointment", b =>
                {
                    b.Property<int>("DoctorId")
                        .HasColumnType("integer")
                        .HasColumnName("doctorId");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer")
                        .HasColumnName("patientId");

                    b.Property<int>("PerscriptionId")
                        .HasColumnType("integer")
                        .HasColumnName("perscriptionId");

                    b.Property<DateTime>("Booking")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("booking");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.HasKey("DoctorId", "PatientId", "PerscriptionId");

                    b.ToTable("appointments");

                    b.HasData(
                        new
                        {
                            DoctorId = 3,
                            PatientId = 1,
                            PerscriptionId = 1,
                            Booking = new DateTime(2024, 11, 16, 12, 51, 9, 423, DateTimeKind.Utc).AddTicks(5113),
                            Id = 1
                        },
                        new
                        {
                            DoctorId = 1,
                            PatientId = 2,
                            PerscriptionId = 2,
                            Booking = new DateTime(2025, 7, 13, 15, 35, 3, 423, DateTimeKind.Utc).AddTicks(5181),
                            Id = 2
                        },
                        new
                        {
                            DoctorId = 4,
                            PatientId = 3,
                            PerscriptionId = 3,
                            Booking = new DateTime(2024, 10, 17, 21, 27, 30, 423, DateTimeKind.Utc).AddTicks(5189),
                            Id = 3
                        },
                        new
                        {
                            DoctorId = 4,
                            PatientId = 4,
                            PerscriptionId = 1,
                            Booking = new DateTime(2025, 5, 30, 1, 35, 25, 423, DateTimeKind.Utc).AddTicks(5193),
                            Id = 4
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Oprah Obama"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Mick Winfrey"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Audrey Jagger"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Mick Hendrix"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("instruction");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.ToTable("medicine");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Instruction = "Crush and mix with sand",
                            Name = "Ultra Pills",
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            Instruction = "Swallow with sand",
                            Name = "Good Mold",
                            Quantity = 8
                        },
                        new
                        {
                            Id = 3,
                            Instruction = "Apply on your face and then take some sand",
                            Name = "Super Laxatives",
                            Quantity = 8
                        },
                        new
                        {
                            Id = 4,
                            Instruction = "Inject into arm and then take some cocaine",
                            Name = "Ultra Candy",
                            Quantity = 5
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Oprah Winfrey"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Kate Winslet"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Oprah Winfrey"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Jimi Winfrey"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Perscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("perscription");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        },
                        new
                        {
                            Id = 3
                        },
                        new
                        {
                            Id = 4
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.PerscriptionMedicine", b =>
                {
                    b.Property<int>("MedicineId")
                        .HasColumnType("integer")
                        .HasColumnName("medicineId");

                    b.Property<int>("PerscriptionId")
                        .HasColumnType("integer")
                        .HasColumnName("perscriptionId");

                    b.HasKey("MedicineId", "PerscriptionId");

                    b.HasIndex("PerscriptionId");

                    b.ToTable("PerscriptionsMedicines");

                    b.HasData(
                        new
                        {
                            MedicineId = 1,
                            PerscriptionId = 4
                        },
                        new
                        {
                            MedicineId = 1,
                            PerscriptionId = 2
                        },
                        new
                        {
                            MedicineId = 2,
                            PerscriptionId = 3
                        },
                        new
                        {
                            MedicineId = 2,
                            PerscriptionId = 1
                        },
                        new
                        {
                            MedicineId = 3,
                            PerscriptionId = 4
                        },
                        new
                        {
                            MedicineId = 3,
                            PerscriptionId = 3
                        },
                        new
                        {
                            MedicineId = 4,
                            PerscriptionId = 1
                        },
                        new
                        {
                            MedicineId = 4,
                            PerscriptionId = 4
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.PerscriptionMedicine", b =>
                {
                    b.HasOne("workshop.wwwapi.Models.Medicine", "Medicine")
                        .WithMany("PerscriptionMedicines")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workshop.wwwapi.Models.Perscription", "Perscription")
                        .WithMany("PerscriptionMedicines")
                        .HasForeignKey("PerscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("Perscription");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Medicine", b =>
                {
                    b.Navigation("PerscriptionMedicines");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Perscription", b =>
                {
                    b.Navigation("PerscriptionMedicines");
                });
#pragma warning restore 612, 618
        }
    }
}
